ProjectDesignBuilder.py
  (12:24)[ main() ]
Administrator.py
  (18:66)[ time_code() ]
  (26:66)[ assitant() ]
ApplicationManager.py
  (2:67)[ startCadQueryEditor(openFile = '') ]
Secretary.py
  (2:4)[ vdir(obj) ]
Typographer.py
  (11:78)[ clear() ]
  (16:78)[ headding_section(marker = None, title = None) ]
  (33:78)[ check_string(string, substring_list) ]
  (40:78)[ check_list(super_string_list = None, sub_string_list = None) ]
  (49:78)[ listToString(inList) ]
  (61:78)[ formatConfig(inString) ]
  (72:78)[ pathto_dict(path_) ]
InitializationManager.py
  (21:55)[ initalize(project_path = invoke('.UtilityManager', 'Utilities.Maintenance').set_project_directory(),project_path = invoke('.UtilityManager', 'Utilities.Maintenance').set_project_directory(),directory_omit = ['.git', '__', 'html'],file_register_types = ['.md', '.py', '.rst', '.html', '.log', '.ini']) ]
UtilityManager.py
  (13:43)[ parse_directory_path(project_root = 'file_path', parse_file = __file__) ]
  (28:43)[ set_project_directory() ]
  (36:43)[ clean_python_operations(operation_path, remove = False) ]
ParameterManager.py
  (20:36)[ setParameters(returnFile = False, report = False) ]
LogManager.py
  (16:29)[ log_register(registry = None, logger = None) ]
Compositor.py
  (16:131)[ clear() ]
  (21:131)[ headding_section(marker = None, title = None) ]
  (45:131)[ check_string(string, substring_list) ]
  (52:131)[ check_list(super_string_list = None, sub_string_list = None) ]
  (61:131)[ listToString(inList) ]
  (73:131)[ formatConfig(inString) ]
  (84:131)[ pathto_dict(path_) ]
  (92:131)[ section(headder="section", title = None) ]
RegistryManager.py
  (15:359)[ test_function() ]
ProjectEvaluation.py
  (4:122)[ process_inspection(argumentation = None) ]
  (35:122)[ _section(marker = None) ]
  (53:122)[ review(registry = None) ]
  (88:122)[ evaluation(registry = None) ]
